#docker-compose up -d --remove-orphans --scale dotnet=2 --build
version: "3.8"
services:
    portainer:
        image: portainer/portainer-ce:2.11.0
        restart: always
        ports:
            - 9000:9000
            - 9443:9443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    webserver:
        image: nginx:1.21.0
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./index.html:/usr/share/nginx/html/index.html
            - ./README.md:/usr/share/nginx/html/README.md
            - ./examples:/usr/share/nginx/html/examples
            - ./webserver/nginx.conf:/etc/nginx/nginx.conf
            - ./webserver/http.js:/etc/nginx/http.js
            - ./webserver/server.crt:/etc/nginx/server.crt
            - ./webserver/server.key:/etc/nginx/server.key
        depends_on:
            - gateway
    gateway:
        image: nginx:1.21.0
        ports:
            - 8888:80
        volumes:
            - ./gateway/nginx.conf:/etc/nginx/nginx.conf
    redis.signalr:
        image: redis:6.2.6
        restart: always
        ports:
            - 6379:6379
        command: redis-server --requirepass aA123456!
    db.mysql:
        image: mysql:8.0.27
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: aA123456!
        command: --default-authentication-plugin=mysql_native_password
    db.cockroachdb:
        image: cockroachdb/cockroach:latest-v21.2
        ports:
            - 26257:26257
            - 8080:8080
        command: start-single-node --insecure
